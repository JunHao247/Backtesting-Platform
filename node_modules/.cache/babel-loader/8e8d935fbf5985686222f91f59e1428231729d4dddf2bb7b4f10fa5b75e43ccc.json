{"ast":null,"code":"var _jsxFileName = \"/Users/junhaolim/Desktop/crypto-backtesting/src/components/Documentation.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Documentation = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"documentation\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Documentation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Welcome to the Crypto Backtesting Platform documentation. Here you can find information on how to use the platform, create strategies, and interpret results.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Creating Strategies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"To create a strategy, you need to define a function named \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"strategy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 68\n      }, this), \" that takes a DataFrame as input and returns a DataFrame with buy/sell signals.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: `\ndef strategy(data):\n    short_window = 5\n    long_window = 20\n    data['short_mavg'] = data['close'].rolling(window=short_window, min_periods=1).mean()\n    data['long_mavg'] = data['close'].rolling(window=long_window, min_periods=1).mean()\n    data['signal'] = 0\n    data.loc[short_window:, 'signal'] = np.where(data.loc[short_window:, 'short_mavg'] > data.loc[short_window:, 'long_mavg'], 1, 0)\n    data['positions'] = data['signal'].diff()\n    return data\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Interpreting Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The results of the backtest will show the buy/sell signals along with the portfolio value over time. You can use this information to evaluate the performance of your strategy.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = Documentation;\nexport default Documentation;\nvar _c;\n$RefreshReg$(_c, \"Documentation\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Documentation","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/junhaolim/Desktop/crypto-backtesting/src/components/Documentation.js"],"sourcesContent":["import React from 'react';\n\nconst Documentation = () => {\n  return (\n    <div className=\"documentation\">\n      <h2>Documentation</h2>\n      <p>Welcome to the Crypto Backtesting Platform documentation. Here you can find information on how to use the platform, create strategies, and interpret results.</p>\n      <br></br>\n      <h3>Creating Strategies</h3>\n      <p>To create a strategy, you need to define a function named <code>strategy</code> that takes a DataFrame as input and returns a DataFrame with buy/sell signals.</p>\n      <pre>\n        {`\ndef strategy(data):\n    short_window = 5\n    long_window = 20\n    data['short_mavg'] = data['close'].rolling(window=short_window, min_periods=1).mean()\n    data['long_mavg'] = data['close'].rolling(window=long_window, min_periods=1).mean()\n    data['signal'] = 0\n    data.loc[short_window:, 'signal'] = np.where(data.loc[short_window:, 'short_mavg'] > data.loc[short_window:, 'long_mavg'], 1, 0)\n    data['positions'] = data['signal'].diff()\n    return data\n        `}\n      </pre>\n      <h3>Interpreting Results</h3>\n      <br></br>\n      <p>The results of the backtest will show the buy/sell signals along with the portfolio value over time. You can use this information to evaluate the performance of your strategy.</p>\n    </div>\n  );\n};\n\nexport default Documentation;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,oBACED,OAAA;IAAKE,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BH,OAAA;MAAAG,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBP,OAAA;MAAAG,QAAA,EAAG;IAA6J;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACpKP,OAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTP,OAAA;MAAAG,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BP,OAAA;MAAAG,QAAA,GAAG,4DAA0D,eAAAH,OAAA;QAAAG,QAAA,EAAM;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,mFAA+E;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACrKP,OAAA;MAAAG,QAAA,EACG;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACNP,OAAA;MAAAG,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BP,OAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTP,OAAA;MAAAG,QAAA,EAAG;IAA+K;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnL,CAAC;AAEV,CAAC;AAACC,EAAA,GA1BIP,aAAa;AA4BnB,eAAeA,aAAa;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}