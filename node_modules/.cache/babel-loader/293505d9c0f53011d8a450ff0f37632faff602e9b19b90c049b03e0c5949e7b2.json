{"ast":null,"code":"var _jsxFileName = \"/Users/junhaolim/Desktop/crypto-backtesting/src/components/BacktestForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport TickerSelector from './TickerSelector';\nimport DateRangePicker from './DateRangePicker';\nimport StrategyEditor from './StrategyEditor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultStrategies = {\n  'Moving Average Crossover': `\ndef strategy(data):\n    short_window = 5\n    long_window = 20\n    data['short_mavg'] = data['close'].rolling(window=short_window, min_periods=1).mean()\n    data['long_mavg'] = data['close'].rolling(window=long_window, min_periods=1).mean()\n    data['signal'] = 0\n    data.loc[short_window:, 'signal'] = np.where(data.loc[short_window:, 'short_mavg'] > data.loc[short_window:, 'long_mavg'], 1, 0)\n    data['positions'] = data['signal'].diff()\n    return data\n  `,\n  'Momentum Strategy': `\ndef strategy(data, window=20):\n    data = data.copy()  # Make a copy of the DataFrame\n    data['momentum'] = data['close'].diff(window)\n    data['signal'] = 0\n    data.loc[window:, 'signal'] = np.where(data['momentum'][window:] > 0, 1, 0)\n    data['positions'] = data['signal'].diff()\n    return data\n  `,\n  'Breakout Strategy': `\ndef strategy(data, window=20):\n    data = data.copy()  # Make a copy of the DataFrame\n    data['rolling_max'] = data['high'].rolling(window=window).max()\n    data['rolling_min'] = data['low'].rolling(window=window).min()\n    data['signal'] = 0\n    data['signal'] = np.where(data['close'] > data['rolling_max'].shift(1), 1, data['signal'])\n    data['signal'] = np.where(data['close'] < data['rolling_min'].shift(1), -1, data['signal'])\n    data['positions'] = data['signal'].diff()\n    return data\n  `,\n  'AI-Based Strategy': 'ai',\n  'Custom AI Strategy': 'custom_ai'\n};\nconst BacktestForm = ({\n  onResults\n}) => {\n  _s();\n  const [symbol, setSymbol] = useState('BTCUSDT');\n  const [startDate, setStartDate] = useState('2023-01-01');\n  const [endDate, setEndDate] = useState('2024-01-01');\n  const [initialCash, setInitialCash] = useState(10000);\n  const [selectedStrategy, setSelectedStrategy] = useState(Object.keys(defaultStrategies)[0]);\n  const [strategy, setStrategy] = useState(defaultStrategies[selectedStrategy]);\n  const [modelFile, setModelFile] = useState(null);\n  const [trainingScript, setTrainingScript] = useState(null);\n  const [error, setError] = useState(null);\n  const [sessionId] = useState(`session-${Date.now()}`);\n  const handleStrategyChange = e => {\n    const newStrategy = e.target.value;\n    setSelectedStrategy(newStrategy);\n    setStrategy(defaultStrategies[newStrategy]);\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (e.target.name === 'modelFile') {\n      setModelFile(file);\n    } else if (e.target.name === 'trainingScript') {\n      setTrainingScript(file);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    if (new Date(startDate) > new Date(endDate)) {\n      setError('Start date cannot be greater than end date');\n      return;\n    }\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const diffTime = Math.abs(end - start);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    if (selectedStrategy === 'AI-Based Strategy' && diffDays < 30) {\n      setError('AI-Based Strategy requires at least 30 days of data');\n      return;\n    }\n    if (initialCash <= 0) {\n      setError('Initial cash must be greater than 0');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('symbol', symbol);\n    formData.append('startDate', startDate);\n    formData.append('endDate', endDate);\n    formData.append('initialCash', initialCash);\n    formData.append('strategy', strategy);\n    formData.append('sessionId', sessionId);\n    if (selectedStrategy === 'Custom AI Strategy') {\n      if (!modelFile || !trainingScript) {\n        setError('Please upload both model and training script files for Custom AI Strategy');\n        return;\n      }\n      formData.append('modelFile', modelFile);\n      formData.append('trainingScript', trainingScript);\n    }\n    try {\n      const response = await axios.post('http://localhost:3000/api/backtest', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      onResults(response.data);\n    } catch (err) {\n      setError('Failed to run backtest');\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Cryptocurrency Ticker:\", /*#__PURE__*/_jsxDEV(TickerSelector, {\n            value: symbol,\n            onTickerChange: setSymbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Date Range:\", /*#__PURE__*/_jsxDEV(DateRangePicker, {\n            onStartDateChange: setStartDate,\n            onEndDateChange: setEndDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Initial Cash:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: initialCash,\n            onChange: e => setInitialCash(parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Strategy:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedStrategy,\n            onChange: handleStrategyChange,\n            children: Object.keys(defaultStrategies).map(strat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: strat,\n              children: strat\n            }, strat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), selectedStrategy === 'Custom AI Strategy' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Model File:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"modelFile\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Training Script:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"trainingScript\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Python Code:\", /*#__PURE__*/_jsxDEV(StrategyEditor, {\n            onStrategyChange: setStrategy,\n            presetStrategy: strategy\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Run Backtest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(BacktestForm, \"vmYXARrtiUziO0gGxGp2ULp+6Bk=\");\n_c = BacktestForm;\nexport default BacktestForm;\nvar _c;\n$RefreshReg$(_c, \"BacktestForm\");","map":{"version":3,"names":["React","useState","axios","TickerSelector","DateRangePicker","StrategyEditor","jsxDEV","_jsxDEV","defaultStrategies","BacktestForm","onResults","_s","symbol","setSymbol","startDate","setStartDate","endDate","setEndDate","initialCash","setInitialCash","selectedStrategy","setSelectedStrategy","Object","keys","strategy","setStrategy","modelFile","setModelFile","trainingScript","setTrainingScript","error","setError","sessionId","Date","now","handleStrategyChange","e","newStrategy","target","value","handleFileChange","file","files","name","handleSubmit","preventDefault","start","end","diffTime","Math","abs","diffDays","ceil","formData","FormData","append","response","post","headers","data","err","console","className","children","onSubmit","onTickerChange","fileName","_jsxFileName","lineNumber","columnNumber","onStartDateChange","onEndDateChange","type","onChange","parseFloat","map","strat","onStrategyChange","presetStrategy","_c","$RefreshReg$"],"sources":["/Users/junhaolim/Desktop/crypto-backtesting/src/components/BacktestForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport TickerSelector from './TickerSelector';\nimport DateRangePicker from './DateRangePicker';\nimport StrategyEditor from './StrategyEditor';\n\nconst defaultStrategies = {\n  'Moving Average Crossover': `\ndef strategy(data):\n    short_window = 5\n    long_window = 20\n    data['short_mavg'] = data['close'].rolling(window=short_window, min_periods=1).mean()\n    data['long_mavg'] = data['close'].rolling(window=long_window, min_periods=1).mean()\n    data['signal'] = 0\n    data.loc[short_window:, 'signal'] = np.where(data.loc[short_window:, 'short_mavg'] > data.loc[short_window:, 'long_mavg'], 1, 0)\n    data['positions'] = data['signal'].diff()\n    return data\n  `,\n  'Momentum Strategy': `\ndef strategy(data, window=20):\n    data = data.copy()  # Make a copy of the DataFrame\n    data['momentum'] = data['close'].diff(window)\n    data['signal'] = 0\n    data.loc[window:, 'signal'] = np.where(data['momentum'][window:] > 0, 1, 0)\n    data['positions'] = data['signal'].diff()\n    return data\n  `,\n  'Breakout Strategy': `\ndef strategy(data, window=20):\n    data = data.copy()  # Make a copy of the DataFrame\n    data['rolling_max'] = data['high'].rolling(window=window).max()\n    data['rolling_min'] = data['low'].rolling(window=window).min()\n    data['signal'] = 0\n    data['signal'] = np.where(data['close'] > data['rolling_max'].shift(1), 1, data['signal'])\n    data['signal'] = np.where(data['close'] < data['rolling_min'].shift(1), -1, data['signal'])\n    data['positions'] = data['signal'].diff()\n    return data\n  `,\n  'AI-Based Strategy': 'ai',\n  'Custom AI Strategy': 'custom_ai',\n};\n\nconst BacktestForm = ({ onResults }) => {\n  const [symbol, setSymbol] = useState('BTCUSDT');\n  const [startDate, setStartDate] = useState('2023-01-01');\n  const [endDate, setEndDate] = useState('2024-01-01');\n  const [initialCash, setInitialCash] = useState(10000);\n  const [selectedStrategy, setSelectedStrategy] = useState(Object.keys(defaultStrategies)[0]);\n  const [strategy, setStrategy] = useState(defaultStrategies[selectedStrategy]);\n  const [modelFile, setModelFile] = useState(null);\n  const [trainingScript, setTrainingScript] = useState(null);\n  const [error, setError] = useState(null);\n  const [sessionId] = useState(`session-${Date.now()}`);\n\n\n  const handleStrategyChange = (e) => {\n    const newStrategy = e.target.value;\n    setSelectedStrategy(newStrategy);\n    setStrategy(defaultStrategies[newStrategy]);\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (e.target.name === 'modelFile') {\n      setModelFile(file);\n    } else if (e.target.name === 'trainingScript') {\n      setTrainingScript(file);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(null);\n\n    if (new Date(startDate) > new Date(endDate)) {\n      setError('Start date cannot be greater than end date');\n      return;\n    }\n\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const diffTime = Math.abs(end - start);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n    if (selectedStrategy === 'AI-Based Strategy' && diffDays < 30) {\n      setError('AI-Based Strategy requires at least 30 days of data');\n      return;\n    }\n\n    if (initialCash <= 0) {\n      setError('Initial cash must be greater than 0');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('symbol', symbol);\n    formData.append('startDate', startDate);\n    formData.append('endDate', endDate);\n    formData.append('initialCash', initialCash);\n    formData.append('strategy', strategy);\n    formData.append('sessionId', sessionId);\n\n\n    if (selectedStrategy === 'Custom AI Strategy') {\n      if (!modelFile || !trainingScript) {\n        setError('Please upload both model and training script files for Custom AI Strategy');\n        return;\n      }\n      formData.append('modelFile', modelFile);\n      formData.append('trainingScript', trainingScript);\n    }\n\n    try {\n      const response = await axios.post('http://localhost:3000/api/backtest', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      onResults(response.data);\n    } catch (err) {\n      setError('Failed to run backtest');\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <form onSubmit={handleSubmit} className=\"form-container\">\n        <div className=\"leftContainer\">\n          <label>\n            Cryptocurrency Ticker:\n            <TickerSelector value={symbol} onTickerChange={setSymbol} />\n          </label>\n          <label>\n            Date Range:\n            <DateRangePicker onStartDateChange={setStartDate} onEndDateChange={setEndDate} />\n          </label>\n          <label>\n            Initial Cash:\n            <input type=\"number\" value={initialCash} onChange={(e) => setInitialCash(parseFloat(e.target.value))} />\n          </label>\n          <label>\n            Strategy:\n            <select value={selectedStrategy} onChange={handleStrategyChange}>\n              {Object.keys(defaultStrategies).map((strat) => (\n                <option key={strat} value={strat}>\n                  {strat}\n                </option>\n              ))}\n            </select>\n          </label>\n          {selectedStrategy === 'Custom AI Strategy' && (\n            <div>\n              <label>\n                Model File:\n                <input type=\"file\" name=\"modelFile\" onChange={handleFileChange} />\n              </label>\n              <label>\n                Training Script:\n                <input type=\"file\" name=\"trainingScript\" onChange={handleFileChange} />\n              </label>\n            </div>\n          )}\n        </div>\n        <div className=\"rightContainer\">\n          <label>\n            Python Code:\n            <StrategyEditor onStrategyChange={setStrategy} presetStrategy={strategy} />\n          </label>\n          <button type=\"submit\">Run Backtest</button>\n        </div>\n        {error && <div className=\"error\">{error}</div>}\n      </form>\n    </div>\n  );\n};\n\nexport default BacktestForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}