{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import TickerSelector from'./TickerSelector';import DateRangePicker from'./DateRangePicker';import StrategyEditor from'./StrategyEditor';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const defaultStrategies={'Moving Average Crossover':\"\\ndef strategy(data):\\n    short_window = 5\\n    long_window = 20\\n    data['short_mavg'] = data['close'].rolling(window=short_window, min_periods=1).mean()\\n    data['long_mavg'] = data['close'].rolling(window=long_window, min_periods=1).mean()\\n    data['signal'] = 0\\n    data.loc[short_window:, 'signal'] = np.where(data.loc[short_window:, 'short_mavg'] > data.loc[short_window:, 'long_mavg'], 1, 0)\\n    data['positions'] = data['signal'].diff()\\n    return data\\n  \",'Momentum Strategy':\"\\ndef strategy(data, window=20):\\n    data = data.copy()  # Make a copy of the DataFrame\\n    data['momentum'] = data['close'].diff(window)\\n    data['signal'] = 0\\n    data.loc[window:, 'signal'] = np.where(data['momentum'][window:] > 0, 1, 0)\\n    data['positions'] = data['signal'].diff()\\n    return data\\n  \",'Breakout Strategy':\"\\ndef strategy(data, window=20):\\n    data = data.copy()  # Make a copy of the DataFrame\\n    data['rolling_max'] = data['high'].rolling(window=window).max()\\n    data['rolling_min'] = data['low'].rolling(window=window).min()\\n    data['signal'] = 0\\n    data['signal'] = np.where(data['close'] > data['rolling_max'].shift(1), 1, data['signal'])\\n    data['signal'] = np.where(data['close'] < data['rolling_min'].shift(1), -1, data['signal'])\\n    data['positions'] = data['signal'].diff()\\n    return data\\n  \",'AI-Based Strategy':'ai'};const BacktestForm=_ref=>{let{onResults}=_ref;const[symbol,setSymbol]=useState('BTCUSDT');const[startDate,setStartDate]=useState('2023-01-01');const[endDate,setEndDate]=useState('2024-01-01');const[initialCash,setInitialCash]=useState(10000);const[selectedStrategy,setSelectedStrategy]=useState(Object.keys(defaultStrategies)[0]);const[strategy,setStrategy]=useState(defaultStrategies[selectedStrategy]);const[error,setError]=useState(null);const handleStrategyChange=e=>{const newStrategy=e.target.value;setSelectedStrategy(newStrategy);setStrategy(defaultStrategies[newStrategy]);};const handleSubmit=async e=>{e.preventDefault();setError(null);if(new Date(startDate)>new Date(endDate)){setError('Start date cannot be greater than end date');return;}const start=new Date(startDate);const end=new Date(endDate);const diffTime=Math.abs(end-start);const diffDays=Math.ceil(diffTime/(1000*60*60*24));if(selectedStrategy==='AI-Based Strategy'&&diffDays<30){setError('AI-Based Strategy requires at least 30 days of data');return;}if(initialCash<=0){setError('Initial cash must be greater than 0');return;}try{const response=await axios.post('http://localhost:3000/api/backtest',{symbol,startDate,endDate,initialCash,strategy});onResults(response.data);}catch(err){setError('Failed to run backtest');console.error(err);}};return/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"form-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"leftContainer\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Cryptocurrency Ticker:\",/*#__PURE__*/_jsx(TickerSelector,{value:symbol,onTickerChange:setSymbol})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Date Range:\",/*#__PURE__*/_jsx(DateRangePicker,{onStartDateChange:setStartDate,onEndDateChange:setEndDate})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Initial Cash:\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:initialCash,onChange:e=>setInitialCash(parseFloat(e.target.value))})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Strategy:\",/*#__PURE__*/_jsx(\"select\",{value:selectedStrategy,onChange:handleStrategyChange,children:Object.keys(defaultStrategies).map(strat=>/*#__PURE__*/_jsx(\"option\",{value:strat,children:strat},strat))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"rightContainer\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Python Code:\",/*#__PURE__*/_jsx(StrategyEditor,{onStrategyChange:setStrategy,presetStrategy:strategy})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Run Backtest\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error})]})});};export default BacktestForm;","map":{"version":3,"names":["React","useState","axios","TickerSelector","DateRangePicker","StrategyEditor","jsx","_jsx","jsxs","_jsxs","defaultStrategies","BacktestForm","_ref","onResults","symbol","setSymbol","startDate","setStartDate","endDate","setEndDate","initialCash","setInitialCash","selectedStrategy","setSelectedStrategy","Object","keys","strategy","setStrategy","error","setError","handleStrategyChange","e","newStrategy","target","value","handleSubmit","preventDefault","Date","start","end","diffTime","Math","abs","diffDays","ceil","response","post","data","err","console","className","children","onSubmit","onTickerChange","onStartDateChange","onEndDateChange","type","onChange","parseFloat","map","strat","onStrategyChange","presetStrategy"],"sources":["/Users/junhaolim/Desktop/crypto-backtesting/src/components/BacktestForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport TickerSelector from './TickerSelector';\nimport DateRangePicker from './DateRangePicker';\nimport StrategyEditor from './StrategyEditor';\n\nconst defaultStrategies = {\n  'Moving Average Crossover': `\ndef strategy(data):\n    short_window = 5\n    long_window = 20\n    data['short_mavg'] = data['close'].rolling(window=short_window, min_periods=1).mean()\n    data['long_mavg'] = data['close'].rolling(window=long_window, min_periods=1).mean()\n    data['signal'] = 0\n    data.loc[short_window:, 'signal'] = np.where(data.loc[short_window:, 'short_mavg'] > data.loc[short_window:, 'long_mavg'], 1, 0)\n    data['positions'] = data['signal'].diff()\n    return data\n  `,\n  'Momentum Strategy': `\ndef strategy(data, window=20):\n    data = data.copy()  # Make a copy of the DataFrame\n    data['momentum'] = data['close'].diff(window)\n    data['signal'] = 0\n    data.loc[window:, 'signal'] = np.where(data['momentum'][window:] > 0, 1, 0)\n    data['positions'] = data['signal'].diff()\n    return data\n  `,\n  'Breakout Strategy': `\ndef strategy(data, window=20):\n    data = data.copy()  # Make a copy of the DataFrame\n    data['rolling_max'] = data['high'].rolling(window=window).max()\n    data['rolling_min'] = data['low'].rolling(window=window).min()\n    data['signal'] = 0\n    data['signal'] = np.where(data['close'] > data['rolling_max'].shift(1), 1, data['signal'])\n    data['signal'] = np.where(data['close'] < data['rolling_min'].shift(1), -1, data['signal'])\n    data['positions'] = data['signal'].diff()\n    return data\n  `,\n  'AI-Based Strategy': 'ai',\n};\n\nconst BacktestForm = ({ onResults }) => {\n  const [symbol, setSymbol] = useState('BTCUSDT');\n  const [startDate, setStartDate] = useState('2023-01-01');\n  const [endDate, setEndDate] = useState('2024-01-01');\n  const [initialCash, setInitialCash] = useState(10000);\n  const [selectedStrategy, setSelectedStrategy] = useState(Object.keys(defaultStrategies)[0]);\n  const [strategy, setStrategy] = useState(defaultStrategies[selectedStrategy]);\n  const [error, setError] = useState(null);\n\n  const handleStrategyChange = (e) => {\n    const newStrategy = e.target.value;\n    setSelectedStrategy(newStrategy);\n    setStrategy(defaultStrategies[newStrategy]);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(null);\n\n    if (new Date(startDate) > new Date(endDate)) {\n      setError('Start date cannot be greater than end date');\n      return;\n    }\n\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const diffTime = Math.abs(end - start);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n    if (selectedStrategy === 'AI-Based Strategy' && diffDays < 30) {\n      setError('AI-Based Strategy requires at least 30 days of data');\n      return;\n    }\n\n    if (initialCash <= 0) {\n      setError('Initial cash must be greater than 0');\n      return;\n    }\n\n    try {\n      const response = await axios.post('http://localhost:3000/api/backtest', {\n        symbol,\n        startDate,\n        endDate,\n        initialCash,\n        strategy,\n      });\n      onResults(response.data);\n    } catch (err) {\n      setError('Failed to run backtest');\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <form onSubmit={handleSubmit} className=\"form-container\">\n        <div className=\"leftContainer\">\n          <label>\n            Cryptocurrency Ticker:\n            <TickerSelector value={symbol} onTickerChange={setSymbol} />\n          </label>\n          <label>\n            Date Range:\n            <DateRangePicker onStartDateChange={setStartDate} onEndDateChange={setEndDate} />\n          </label>\n          <label>\n            Initial Cash:\n            <input type=\"number\" value={initialCash} onChange={(e) => setInitialCash(parseFloat(e.target.value))} />\n          </label>\n          <label>\n            Strategy:\n            <select value={selectedStrategy} onChange={handleStrategyChange}>\n              {Object.keys(defaultStrategies).map((strat) => (\n                <option key={strat} value={strat}>\n                  {strat}\n                </option>\n              ))}\n            </select>\n          </label>\n        </div>\n        <div className=\"rightContainer\">\n          <label>\n            Python Code:\n            <StrategyEditor onStrategyChange={setStrategy} presetStrategy={strategy} />\n          </label>\n          <button type=\"submit\">Run Backtest</button>\n        </div>\n        {error && <div className=\"error\">{error}</div>}\n      </form>\n    </div>\n  );\n};\n\nexport default BacktestForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}