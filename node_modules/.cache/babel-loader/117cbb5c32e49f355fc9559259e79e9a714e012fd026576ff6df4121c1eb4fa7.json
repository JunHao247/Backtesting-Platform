{"ast":null,"code":"var _jsxFileName = \"/Users/junhaolim/Desktop/crypto-backtesting/src/components/BacktestForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport TickerSelector from './TickerSelector';\nimport DateRangePicker from './DateRangePicker';\nimport StrategyEditor from './StrategyEditor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultStrategies = {\n  'Moving Average Crossover': `\ndef strategy(data):\n    short_window = 5\n    long_window = 20\n    data['short_mavg'] = data['close'].rolling(window=short_window, min_periods=1).mean()\n    data['long_mavg'] = data['close'].rolling(window=long_window, min_periods=1).mean()\n    data['signal'] = 0\n    data.loc[short_window:, 'signal'] = np.where(data.loc[short_window:, 'short_mavg'] > data.loc[short_window:, 'long_mavg'], 1, 0)\n    data['positions'] = data['signal'].diff()\n    return data\n  `,\n  'Momentum Strategy': `\ndef strategy(data, window=20):\n    data = data.copy()  # Make a copy of the DataFrame\n    data['momentum'] = data['close'].diff(window)\n    data['signal'] = 0\n    data.loc[window:, 'signal'] = np.where(data['momentum'][window:] > 0, 1, 0)\n    data['positions'] = data['signal'].diff()\n    return data\n  `,\n  'Breakout Strategy': `\ndef strategy(data, window=20):\n    data = data.copy()  # Make a copy of the DataFrame\n    data['rolling_max'] = data['high'].rolling(window=window).max()\n    data['rolling_min'] = data['low'].rolling(window=window).min()\n    data['signal'] = 0\n    data['signal'] = np.where(data['close'] > data['rolling_max'].shift(1), 1, data['signal'])\n    data['signal'] = np.where(data['close'] < data['rolling_min'].shift(1), -1, data['signal'])\n    data['positions'] = data['signal'].diff()\n    return data\n  `,\n  'AI-Based Strategy': 'ai'\n};\nconst BacktestForm = ({\n  onResults\n}) => {\n  _s();\n  const [symbol, setSymbol] = useState('BTCUSDT');\n  const [startDate, setStartDate] = useState('2023-01-01');\n  const [endDate, setEndDate] = useState('2024-01-01');\n  const [initialCash, setInitialCash] = useState(10000);\n  const [selectedStrategy, setSelectedStrategy] = useState(Object.keys(defaultStrategies)[0]);\n  const [strategy, setStrategy] = useState(defaultStrategies[selectedStrategy]);\n  const [error, setError] = useState(null);\n  const handleStrategyChange = e => {\n    const newStrategy = e.target.value;\n    setSelectedStrategy(newStrategy);\n    setStrategy(defaultStrategies[newStrategy]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    if (new Date(startDate) > new Date(endDate)) {\n      setError('Start date cannot be greater than end date');\n      return;\n    }\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const diffTime = Math.abs(end - start);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    if (selectedStrategy === 'AI-Based Strategy' && diffDays < 30) {\n      setError('AI-Based Strategy requires at least 30 days of data');\n      return;\n    }\n    if (initialCash <= 0) {\n      setError('Initial cash must be greater than 0');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:3000/api/backtest', {\n        symbol,\n        startDate,\n        endDate,\n        initialCash,\n        strategy\n      });\n      onResults(response.data);\n    } catch (err) {\n      setError('Failed to run backtest');\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Cryptocurrency Ticker:\", /*#__PURE__*/_jsxDEV(TickerSelector, {\n            value: symbol,\n            onTickerChange: setSymbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Date Range:\", /*#__PURE__*/_jsxDEV(DateRangePicker, {\n            onStartDateChange: setStartDate,\n            onEndDateChange: setEndDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Initial Cash:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: initialCash,\n            onChange: e => setInitialCash(parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Strategy:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedStrategy,\n            onChange: handleStrategyChange,\n            children: Object.keys(defaultStrategies).map(strat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: strat,\n              children: strat\n            }, strat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Python Code:\", /*#__PURE__*/_jsxDEV(StrategyEditor, {\n            onStrategyChange: setStrategy,\n            presetStrategy: strategy\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Run Backtest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(BacktestForm, \"qTGBY1jIuTKdzvtUDIXiuCyu9fQ=\");\n_c = BacktestForm;\nexport default BacktestForm;\nvar _c;\n$RefreshReg$(_c, \"BacktestForm\");","map":{"version":3,"names":["React","useState","axios","TickerSelector","DateRangePicker","StrategyEditor","jsxDEV","_jsxDEV","defaultStrategies","BacktestForm","onResults","_s","symbol","setSymbol","startDate","setStartDate","endDate","setEndDate","initialCash","setInitialCash","selectedStrategy","setSelectedStrategy","Object","keys","strategy","setStrategy","error","setError","handleStrategyChange","e","newStrategy","target","value","handleSubmit","preventDefault","Date","start","end","diffTime","Math","abs","diffDays","ceil","response","post","data","err","console","className","children","onSubmit","onTickerChange","fileName","_jsxFileName","lineNumber","columnNumber","onStartDateChange","onEndDateChange","type","onChange","parseFloat","map","strat","onStrategyChange","presetStrategy","_c","$RefreshReg$"],"sources":["/Users/junhaolim/Desktop/crypto-backtesting/src/components/BacktestForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport TickerSelector from './TickerSelector';\nimport DateRangePicker from './DateRangePicker';\nimport StrategyEditor from './StrategyEditor';\n\nconst defaultStrategies = {\n  'Moving Average Crossover': `\ndef strategy(data):\n    short_window = 5\n    long_window = 20\n    data['short_mavg'] = data['close'].rolling(window=short_window, min_periods=1).mean()\n    data['long_mavg'] = data['close'].rolling(window=long_window, min_periods=1).mean()\n    data['signal'] = 0\n    data.loc[short_window:, 'signal'] = np.where(data.loc[short_window:, 'short_mavg'] > data.loc[short_window:, 'long_mavg'], 1, 0)\n    data['positions'] = data['signal'].diff()\n    return data\n  `,\n  'Momentum Strategy': `\ndef strategy(data, window=20):\n    data = data.copy()  # Make a copy of the DataFrame\n    data['momentum'] = data['close'].diff(window)\n    data['signal'] = 0\n    data.loc[window:, 'signal'] = np.where(data['momentum'][window:] > 0, 1, 0)\n    data['positions'] = data['signal'].diff()\n    return data\n  `,\n  'Breakout Strategy': `\ndef strategy(data, window=20):\n    data = data.copy()  # Make a copy of the DataFrame\n    data['rolling_max'] = data['high'].rolling(window=window).max()\n    data['rolling_min'] = data['low'].rolling(window=window).min()\n    data['signal'] = 0\n    data['signal'] = np.where(data['close'] > data['rolling_max'].shift(1), 1, data['signal'])\n    data['signal'] = np.where(data['close'] < data['rolling_min'].shift(1), -1, data['signal'])\n    data['positions'] = data['signal'].diff()\n    return data\n  `,\n  'AI-Based Strategy': 'ai',\n};\n\nconst BacktestForm = ({ onResults }) => {\n  const [symbol, setSymbol] = useState('BTCUSDT');\n  const [startDate, setStartDate] = useState('2023-01-01');\n  const [endDate, setEndDate] = useState('2024-01-01');\n  const [initialCash, setInitialCash] = useState(10000);\n  const [selectedStrategy, setSelectedStrategy] = useState(Object.keys(defaultStrategies)[0]);\n  const [strategy, setStrategy] = useState(defaultStrategies[selectedStrategy]);\n  const [error, setError] = useState(null);\n\n  const handleStrategyChange = (e) => {\n    const newStrategy = e.target.value;\n    setSelectedStrategy(newStrategy);\n    setStrategy(defaultStrategies[newStrategy]);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(null);\n\n    if (new Date(startDate) > new Date(endDate)) {\n      setError('Start date cannot be greater than end date');\n      return;\n    }\n\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const diffTime = Math.abs(end - start);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n    if (selectedStrategy === 'AI-Based Strategy' && diffDays < 30) {\n      setError('AI-Based Strategy requires at least 30 days of data');\n      return;\n    }\n\n    if (initialCash <= 0) {\n      setError('Initial cash must be greater than 0');\n      return;\n    }\n\n    try {\n      const response = await axios.post('http://localhost:3000/api/backtest', {\n        symbol,\n        startDate,\n        endDate,\n        initialCash,\n        strategy,\n      });\n      onResults(response.data);\n    } catch (err) {\n      setError('Failed to run backtest');\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <form onSubmit={handleSubmit} className=\"form-container\">\n        <div className=\"leftContainer\">\n          <label>\n            Cryptocurrency Ticker:\n            <TickerSelector value={symbol} onTickerChange={setSymbol} />\n          </label>\n          <label>\n            Date Range:\n            <DateRangePicker onStartDateChange={setStartDate} onEndDateChange={setEndDate} />\n          </label>\n          <label>\n            Initial Cash:\n            <input type=\"number\" value={initialCash} onChange={(e) => setInitialCash(parseFloat(e.target.value))} />\n          </label>\n          <label>\n            Strategy:\n            <select value={selectedStrategy} onChange={handleStrategyChange}>\n              {Object.keys(defaultStrategies).map((strat) => (\n                <option key={strat} value={strat}>\n                  {strat}\n                </option>\n              ))}\n            </select>\n          </label>\n        </div>\n        <div className=\"rightContainer\">\n          <label>\n            Python Code:\n            <StrategyEditor onStrategyChange={setStrategy} presetStrategy={strategy} />\n          </label>\n          <button type=\"submit\">Run Backtest</button>\n        </div>\n        {error && <div className=\"error\">{error}</div>}\n      </form>\n    </div>\n  );\n};\n\nexport default BacktestForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}